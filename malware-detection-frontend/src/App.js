// import React, { useState } from "react";
// import axios from "axios";
// import "./App.css";

// function App() {
//   const [file, setFile] = useState(null);
//   const [prediction, setPrediction] = useState(null);
//   const [loading, setLoading] = useState(false);
//   const [error, setError] = useState(null);

//   // Handle file selection
//   const handleFileChange = (e) => {
//     const selectedFile = e.target.files[0];
//     const allowedTypes = ["application/json"];

//     if (selectedFile && !allowedTypes.includes(selectedFile.type)) {
//       alert("Please upload a valid JSON file.");
//       setFile(null);
//     } else {
//       setFile(selectedFile);
//     }
//   };

//   // Handle form submission
//   const handleSubmit = async (e) => {
//     e.preventDefault();

//     if (!file) {
//       alert("Please upload a file.");
//       return;
//     }

//     const reader = new FileReader();

//     reader.onloadend = async () => {
//       try {
//         const jsonData = JSON.parse(reader.result);

//         setLoading(true);
//         setError(null);

//         // Send the JSON data to Flask backend for prediction
//         const response = await axios.post("http://localhost:5000/predict", jsonData, {
//           headers: {
//             "Content-Type": "application/json",
//           },
//         });

//         // Update prediction state
//         setPrediction(response.data.prediction);
//         setLoading(false);
//       } catch (err) {
//         const errorMessage =
//           err.response && err.response.data && err.response.data.error
//             ? err.response.data.error
//             : "An error occurred while making the prediction.";
//         setError(errorMessage);
//         setLoading(false);
//       }
//     };

//     // Read the file as text and parse it as JSON
//     reader.readAsText(file);
//   };

//   return (
//     <div className="App">
//       <h1>Ransomware Prediction App</h1>
//       <form onSubmit={handleSubmit}>
//         <div>
//           <input type="file" onChange={handleFileChange} />
//         </div>
//         <button type="submit" disabled={loading}>
//           {loading ? "Processing..." : "Predict"}
//         </button>
//       </form>

//       {error && <p style={{ color: "red" }}>{error}</p>}

//       {prediction !== null && (
//         <div>
//           <h3>Prediction Result</h3>
//           <p>{prediction === 1 ? "Malware Detected" : "File is Safe. This does not contain malware"}</p>
//         </div>
//       )}
//     </div>
//   );
// }

// export default App;




import React, { useState } from "react";
import axios from "axios";
import "./App.css";

function App() {
    const [file, setFile] = useState(null);
   const [prediction, setPrediction] = useState(null);
   const [loading, setLoading] = useState(false);
   const [error, setError] = useState(null);
   // Handle file selection
   const handleFileChange = (e) => {
     const selectedFile = e.target.files[0];
     const allowedTypes = ["application/json"];
     if (selectedFile && !allowedTypes.includes(selectedFile.type)) {
       alert("Please upload a valid JSON file.");
       setFile(null);
     } else {
       setFile(selectedFile);
     }
   };
   // Handle form submission
   const handleSubmit = async (e) => {
     e.preventDefault();
     if (!file) {
       alert("Please upload a file.");
       return;
     }
     const reader = new FileReader();
     reader.onloadend = async () => {
       try {
         const jsonData = JSON.parse(reader.result);
         setLoading(true);
         setError(null);
         // Send the JSON data to Flask backend for prediction
         const response = await axios.post("http://localhost:5000/predict", jsonData, {
           headers: {
             "Content-Type": "application/json",
           },
         });
         // Update prediction state
         setPrediction(response.data.prediction);
         setLoading(false);
       } catch (err) {
         const errorMessage =
           err.response && err.response.data && err.response.data.error
             ? err.response.data.error
             : "An error occurred while making the prediction.";
         setError(errorMessage);
         setLoading(false);
       }
     };
     // Read the file as text and parse it as JSON
     reader.readAsText(file);
   };
   return (
     <div className="App">
       <div className="navbar"> 
         <h1>Ransomware Detection</h1>
       </div>
 
       <div style={{ paddingTop: "60px" }}> {/* Adjust content spacing for the navbar */}
         <h2 style={{'color':'white'}}>Upload JSON File for Prediction</h2>
         <form onSubmit={handleSubmit}>
           <div>
             <input type="file" onChange={handleFileChange} />
           </div>
           <button type="submit" disabled={loading}>
             {loading ? "Processing..." : "Predict"}
           </button>
         </form>
         {error && <p className="error">{error}</p>}
         {prediction !== null && (
           <div>
             <h3>Prediction Result</h3>
             <p className={prediction === 1 ? "malware" :"not-malware"} >{prediction === 1 ? "Malware Detected" : "File is Safe. This does not contain malware"}</p>
           </div>
         )}
       </div>
     </div>
   );
 }
 export default App;
// import React, { useState } from "react";
// import axios from "axios";

// function App() {
//   const [file, setFile] = useState(null);
//   const [prediction, setPrediction] = useState(null);
//   const [loading, setLoading] = useState(false);
//   const [error, setError] = useState(null);

//   // Handle file selection
//   const handleFileChange = (e) => {
//     const selectedFile = e.target.files[0];
//     const allowedTypes = ["application/json"];

//     if (selectedFile && !allowedTypes.includes(selectedFile.type)) {
//       alert("Please upload a valid JSON file.");
//       setFile(null);
//     } else {
//       setFile(selectedFile);
//     }
//   };

//   // Handle form submission
//   const handleSubmit = async (e) => {
//     e.preventDefault();

//     if (!file) {
//       alert("Please upload a file.");
//       return;
//     }

//     const reader = new FileReader();

//     reader.onloadend = async () => {
//       try {
//         const jsonData = JSON.parse(reader.result);

//         setLoading(true);
//         setError(null);

//         // Send the JSON data to Flask backend for prediction
//         const response = await axios.post("http://localhost:5000/predict", jsonData, {
//           headers: {
//             "Content-Type": "application/json",
//           },
//         });

//         // Update prediction state
//         setPrediction(response.data.prediction);
//         setLoading(false);
//       } catch (err) {
//         const errorMessage =
//           err.response && err.response.data && err.response.data.error
//             ? err.response.data.error
//             : "An error occurred while making the prediction.";
//         setError(errorMessage);
//         setLoading(false);
//       }
//     };

//     // Read the file as text and parse it as JSON
//     reader.readAsText(file);
//   };

//   return (
//     <div className="App min-h-screen bg-gray-100">
//       {/* Navbar */}
//       <div className="fixed top-0 w-full bg-gray-800 text-white py-4">
//         <div className="container mx-auto flex justify-between items-center">
//           <h1 className="text-xl font-bold">Ransomware Detection</h1>
//           <a href="https://github.com" className="text-white hover:bg-gray-600 px-4 py-2 rounded">GitHub</a>
//         </div>
//       </div>

//       {/* Main Content */}
//       <div className="container mx-auto pt-24 px-4">
//         <h2 className="text-2xl font-semibold mb-6 text-center">Upload JSON File for Prediction</h2>
        
//         <form onSubmit={handleSubmit} className="space-y-4">
//           <div>
//             <input
//               type="file"
//               onChange={handleFileChange}
//               className="w-full p-3 border-2 border-gray-300 rounded-lg bg-white"
//             />
//           </div>
//           <button
//             type="submit"
//             disabled={loading}
//             className={`w-full p-3 rounded-lg text-white ${loading ? "bg-gray-400" : "bg-green-500 hover:bg-green-600"}`}
//           >
//             {loading ? "Processing..." : "Predict"}
//           </button>
//         </form>

//         {error && <p className="text-red-500 mt-4 text-center">{error}</p>}

//         {prediction !== null && (
//           <div className="mt-6 text-center">
//             <h3 className="text-xl font-semibold">Prediction Result</h3>
//             <p className="text-lg text-gray-700 mt-2">
//               {prediction === 1 ? "Malware Detected" : "File is Safe. This does not contain malware"}
//             </p>
//           </div>
//         )}
//       </div>
//     </div>
//   );
// }

// export default App;
